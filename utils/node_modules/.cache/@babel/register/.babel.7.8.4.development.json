{
  "{\"sourceRoot\":\"/Users/shin/Study/javascript/utils/test/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/shin/Study/javascript/utils\",\"filename\":\"/Users/shin/Study/javascript/utils/test/AutoFillComma.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/shin/Study/javascript/utils\",\"plugins\":[],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/shin/Study/javascript/utils/test/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/shin/Study/javascript/utils",
      "filename": "/Users/shin/Study/javascript/utils/test/AutoFillComma.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/shin/Study/javascript/utils",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/shin/Study/javascript/utils/test/AutoFillComma.test.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/shin/Study/javascript/utils/test/AutoFillComma.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/shin/Study/javascript/utils/test/",
        "sourceFileName": "AutoFillComma.test.js"
      }
    },
    "ast": null,
    "code": "import { autoFillComma } from \"./AutoFillComma.js\";\ndescribe('autoFillComma', () => {\n  context('with 1111', () => {\n    it('return 1,111', () => {\n      assert(autoFillComma('1111')).toEqual('1,111');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF1dG9GaWxsQ29tbWEudGVzdC5qcyJdLCJuYW1lcyI6WyJhdXRvRmlsbENvbW1hIiwiZGVzY3JpYmUiLCJjb250ZXh0IiwiaXQiLCJhc3NlcnQiLCJ0b0VxdWFsIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxhQUFULFFBQThCLG9CQUE5QjtBQUVBQyxRQUFRLENBQUMsZUFBRCxFQUFrQixNQUFNO0FBQzVCQyxFQUFBQSxPQUFPLENBQUMsV0FBRCxFQUFjLE1BQU07QUFDdkJDLElBQUFBLEVBQUUsQ0FBQyxjQUFELEVBQWlCLE1BQU07QUFDckJDLE1BQUFBLE1BQU0sQ0FBQ0osYUFBYSxDQUFDLE1BQUQsQ0FBZCxDQUFOLENBQThCSyxPQUE5QixDQUFzQyxPQUF0QztBQUNILEtBRkMsQ0FBRjtBQUdILEdBSk0sQ0FBUDtBQUtILENBTk8sQ0FBUiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc2hpbi9TdHVkeS9qYXZhc2NyaXB0L3V0aWxzL3Rlc3QvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXV0b0ZpbGxDb21tYSB9IGZyb20gXCIuL0F1dG9GaWxsQ29tbWEuanNcIjtcblxuZGVzY3JpYmUoJ2F1dG9GaWxsQ29tbWEnLCAoKSA9PiB7XG4gICAgY29udGV4dCgnd2l0aCAxMTExJywgKCkgPT4ge1xuICAgICAgICBpdCgncmV0dXJuIDEsMTExJywgKCkgPT4ge1xuICAgICAgICAgICAgYXNzZXJ0KGF1dG9GaWxsQ29tbWEoJzExMTEnKSkudG9FcXVhbCgnMSwxMTEnKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "AutoFillComma.test.js"
      ],
      "names": [
        "autoFillComma",
        "describe",
        "context",
        "it",
        "assert",
        "toEqual"
      ],
      "mappings": "AAAA,SAASA,aAAT,QAA8B,oBAA9B;AAEAC,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC5BC,EAAAA,OAAO,CAAC,WAAD,EAAc,MAAM;AACvBC,IAAAA,EAAE,CAAC,cAAD,EAAiB,MAAM;AACrBC,MAAAA,MAAM,CAACJ,aAAa,CAAC,MAAD,CAAd,CAAN,CAA8BK,OAA9B,CAAsC,OAAtC;AACH,KAFC,CAAF;AAGH,GAJM,CAAP;AAKH,CANO,CAAR",
      "sourceRoot": "/Users/shin/Study/javascript/utils/test/",
      "sourcesContent": [
        "import { autoFillComma } from \"./AutoFillComma.js\";\n\ndescribe('autoFillComma', () => {\n    context('with 1111', () => {\n        it('return 1,111', () => {\n            assert(autoFillComma('1111')).toEqual('1,111');\n        });\n    });\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1599006945631
  }
}