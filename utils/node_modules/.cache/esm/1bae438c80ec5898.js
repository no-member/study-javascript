let autoFillCommaWithString,autoFillCommaWithNumber,expect;_80e‍.w("../src/auto_fill_comma/AutoFillComma.js",[["autoFillCommaWithString",["autoFillCommaWithString"],function(v){autoFillCommaWithString=v}],["autoFillCommaWithNumber",["autoFillCommaWithNumber"],function(v){autoFillCommaWithNumber=v}]]);_80e‍.w("chai",[["expect",["expect"],function(v){expect=v}]]);


describe('autoFillComma', () => {
    context('with 123', () => {
        it('return 123', () => {
            expect(autoFillCommaWithString('123')).to.equal('123');
        });
    });

    context('with 1234', () => {
        it('return 1,234', () => {
            expect(autoFillCommaWithString('1234')).to.equal('1,234');
        });
    });

    context('with 123456789', () => {
        it('return 123,456,789', () => {
            expect(autoFillCommaWithString('123456789')).to.equal('123,456,789');
        });
    });
    
    context('with 12345.6789', () => {
        it('return 12,345.6789', () => {
            expect(autoFillCommaWithString('12345.6789')).to.equal('12,345.6789');
        });
    });

    context('with 12,345,6789', () => {
        it('return 123,456,789', () => {
            expect(autoFillCommaWithString('12,345,6789')).to.equal('123,456,789');
        });
    });
    
    context('with 123,456,789', () => {
        it('return 123,456,789', () => {
            expect(autoFillCommaWithString('123,456,789')).to.equal('123,456,789');
        });
    });
    
    context('with 123,a56,789', () => {
        it('return 123,a56,789', () => {
            expect(autoFillCommaWithString('123,a56,789')).to.equal('123,a56,789');
        });
    });

    context('with 123a56789', () => {
        it('return 123a56789', () => {
            expect(autoFillCommaWithString('123a56789')).to.equal('123a56789');
        });
    });
});

describe('autoFillCommaWithNumber', () => {
    context('with 123', () => {
        it('return 123', () => {
            expect(autoFillCommaWithNumber(123)).to.equal('123');
        });
    });

    context('with 1234', () => {
        it('return 1,234', () => {
            expect(autoFillCommaWithNumber(1234)).to.equal('1,234');
        });
    });

    context('with 123456789', () => {
        it('return 123,456,789', () => {
            expect(autoFillCommaWithNumber(123456789)).to.equal('123,456,789');
        });
    });
});
